{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","activeGood","isActive","good","clearBtnHandler","setState","activeBtnToggler","this","hasActive","Boolean","className","cn","type","onClick","map","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,WAAY,OAFhB,EAKEC,SAAW,SAACC,GAAD,OACTA,IAAS,EAAKH,MAAMC,YANxB,EASEG,gBAAkB,kBAChB,EAAKC,SAAS,CAAEJ,WAAY,MAVhC,EAaEK,iBAAmB,SAACH,GAAD,OACjB,EAAKE,SAAS,CACZJ,WAAY,EAAKC,SAASC,GACtB,GACAA,KAjBV,4CAqBE,WAAU,IAAD,OACCF,EAAeM,KAAKP,MAApBC,WACFO,EAAYC,QAAQR,GAE1B,OACE,uBAAMS,UAAU,oBAAhB,UACE,qBAAIA,UACFC,IACE,QACA,CAAE,gCAAiCH,IAHvC,UAQIA,EAAS,UACDP,EADC,gBAEL,oBAEJO,GACA,mCAEE,wBACE,UAAQ,cACRI,KAAK,SACLF,UAAU,cACVG,QAASN,KAAKH,uBAMtB,uBAAOM,UAAU,QAAjB,SACE,gCACGZ,EAAMgB,KAAI,SAAAX,GACT,IAAMD,EAAW,EAAKA,SAASC,GAE/B,OACE,qBACE,UAAQ,OAERO,UACEC,IACE,CAAE,+BAAgCT,IALxC,UASE,6BACE,wBACE,UACEA,EACI,eACA,YAENU,KAAK,SACLF,UAAWC,IACT,SACA,CAAE,UAAWT,IAEfW,QAAS,kBAAM,EAAKP,iBAAiBH,IAXvC,SAcID,EACI,IACA,QAKV,oBAAI,UAAQ,YAAYQ,UAAU,eAAlC,SACGP,MA9BEA,iBA5DvB,GAAyBY,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.16192a3c.chunk.js","sourcesContent":["import { Component } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  activeGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    activeGood: 'Jam',\n  };\n\n  isActive = (good: string) => (\n    good === this.state.activeGood\n  );\n\n  clearBtnHandler = () => (\n    this.setState({ activeGood: '' })\n  );\n\n  activeBtnToggler = (good: string) => (\n    this.setState({\n      activeGood: this.isActive(good)\n        ? ''\n        : good,\n    })\n  );\n\n  render() {\n    const { activeGood } = this.state;\n    const hasActive = Boolean(activeGood);\n\n    return (\n      <main className=\"section container\">\n        <h1 className={\n          cn(\n            'title',\n            { 'is-flex is-align-items-center': hasActive },\n          )\n        }\n        >\n          {\n            hasActive\n              ? (`${activeGood} is selected`)\n              : 'No goods selected'\n          }\n          { hasActive && (\n            <>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.clearBtnHandler}\n              />\n            </>\n          ) }\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              const isActive = this.isActive(good);\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={\n                    cn(\n                      { 'has-background-success-light': isActive },\n                    )\n                  }\n                >\n                  <td>\n                    <button\n                      data-cy={\n                        isActive\n                          ? 'RemoveButton'\n                          : 'AddButton'\n                      }\n                      type=\"button\"\n                      className={cn(\n                        'button',\n                        { 'is-info': isActive },\n                      )}\n                      onClick={() => this.activeBtnToggler(good)}\n                    >\n                      {\n                        isActive\n                          ? '-'\n                          : '+'\n                      }\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}